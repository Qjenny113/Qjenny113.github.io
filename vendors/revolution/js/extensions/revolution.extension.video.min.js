! function(n) {
    function r(b) {
        return void 0 == b ? -1 : jQuery.isNumeric(b) ? b : b.split(":").length > 1 ? 60 * parseInt(b.split(":")[0], 0) + parseInt(b.split(":")[1], 0) : b
    }
    var o = jQuery.fn.revolution,
        p = o.is_mobile(),
        q = {
            alias: "Video Min JS",
            name: "revolution.extensions.video.min.js",
            min_core: "5.3",
            version: "2.0.2"
        };
    jQuery.extend(!0, o, {
        preLoadAudio: function(b, d) {
            return "stop" !== o.compare_version(q).check && void b.find(".tp-audiolayer").each(function() {
                var c = jQuery(this),
                    e = {};
                0 === c.find("audio").length && (e.src = void 0 != c.data("videomp4") ? c.data("videomp4") : "", e.pre = c.data("videopreload") || "", void 0 === c.attr("id") && c.attr("audio-layer-" + Math.round(199999 * Math.random())), e.id = c.attr("id"), e.status = "prepared", e.start = jQuery.now(), e.waittime = 1000 * c.data("videopreloadwait") || 5000, "auto" != e.pre && "canplaythrough" != e.pre && "canplay" != e.pre && "progress" != e.pre || (void 0 === d.audioqueue && (d.audioqueue = []), d.audioqueue.push(e), o.manageVideoLayer(c, d)))
            })
        },
        preLoadAudioDone: function(d, e, f) {
            e.audioqueue && e.audioqueue.length > 0 && jQuery.each(e.audioqueue, function(a, c) {
                d.data("videomp4") !== c.src || c.pre !== f && "auto" !== c.pre || (c.status = "loaded")
            })
        },
        resetVideo: function(b, c, e) {
            var h = b.data();
            switch (h.videotype) {
                case "youtube":
                    h.player;
                    try {
                        if ("on" == h.forcerewind) {
                            var m = r(b.data("videostartat")),
                                A = m == -1,
                                B = 1 === h.bgvideo || b.find(".tp-videoposter").length > 0;
                            m = m == -1 ? 0 : m, void 0 != h.player && (0 !== m && !A || B) && (h.player.seekTo(m), h.player.pauseVideo())
                        }
                    } catch (b) {}
                    0 == b.find(".tp-videoposter").length && 1 !== h.bgvideo && e !== !0 && punchgs.TweenLite.to(b.find("iframe"), 0.3, {
                        autoAlpha: 1,
                        display: "block",
                        ease: punchgs.Power3.easeInOut
                    });
                    break;
                case "vimeo":
                    var C = $f(b.find("iframe").attr("id"));
                    try {
                        if ("on" == h.forcerewind) {
                            var m = r(h.videostartat),
                                A = m == -1,
                                B = 1 === h.bgvideo || b.find(".tp-videoposter").length > 0;
                            m = m == -1 ? 0 : m, (0 !== m && !A || B) && (C.api("seekTo", m), C.api("pause"))
                        }
                    } catch (b) {}
                    0 == b.find(".tp-videoposter").length && 1 !== h.bgvideo && e !== !0 && punchgs.TweenLite.to(b.find("iframe"), 0.3, {
                        autoAlpha: 1,
                        display: "block",
                        ease: punchgs.Power3.easeInOut
                    });
                    break;
                case "html5":
                    if (p && 1 == h.disablevideoonmobile) {
                        return !1
                    }
                    var D = "html5" == h.audio ? "audio" : "video",
                        E = b.find(D),
                        F = E[0];
                    if (punchgs.TweenLite.to(E, 0.3, {
                            autoAlpha: 1,
                            display: "block",
                            ease: punchgs.Power3.easeInOut
                        }), "on" == h.forcerewind && !b.hasClass("videoisplaying")) {
                        try {
                            var m = r(h.videostartat);
                            F.currentTime = m == -1 ? 0 : m
                        } catch (b) {}
                    }("mute" == h.volume || o.lastToggleState(b.videomutetoggledby) || c.globalmute === !0) && (F.muted = !0)
            }
        },
        isVideoMuted: function(f, j) {
            var k = !1,
                l = f.data();
            switch (l.videotype) {
                case "youtube":
                    try {
                        var m = l.player;
                        k = m.isMuted()
                    } catch (f) {}
                    break;
                case "vimeo":
                    try {
                        $f(f.find("iframe").attr("id"));
                        "mute" == l.volume && (k = !0)
                    } catch (f) {}
                    break;
                case "html5":
                    var A = "html5" == l.audio ? "audio" : "video",
                        B = f.find(A),
                        C = B[0];
                    C.muted && (k = !0)
            }
            return k
        },
        muteVideo: function(i, j) {
            var k = i.data();
            switch (k.videotype) {
                case "youtube":
                    try {
                        var l = k.player;
                        l.mute()
                    } catch (i) {}
                    break;
                case "vimeo":
                    try {
                        var m = $f(i.find("iframe").attr("id"));
                        i.data("volume", "mute"), m.api("setVolume", 0)
                    } catch (i) {}
                    break;
                case "html5":
                    var A = "html5" == k.audio ? "audio" : "video",
                        B = i.find(A),
                        C = B[0];
                    C.muted = !0
            }
        },
        unMuteVideo: function(i, j) {
            if (j.globalmute !== !0) {
                var k = i.data();
                switch (k.videotype) {
                    case "youtube":
                        try {
                            var l = k.player;
                            l.unMute()
                        } catch (i) {}
                        break;
                    case "vimeo":
                        try {
                            var m = $f(i.find("iframe").attr("id"));
                            i.data("volume", "1"), m.api("setVolume", 1)
                        } catch (i) {}
                        break;
                    case "html5":
                        var A = "html5" == k.audio ? "audio" : "video",
                            B = i.find(A),
                            C = B[0];
                        C.muted = !1
                }
            }
        },
        stopVideo: function(i, j) {
            var k = i.data();
            switch (j.leaveViewPortBasedStop || (j.lastplayedvideos = []), j.leaveViewPortBasedStop = !1, k.videotype) {
                case "youtube":
                    try {
                        var l = k.player;
                        if (2 === l.getPlayerState() || 5 === l.getPlayerState()) {
                            return
                        }
                        l.pauseVideo(), k.youtubepausecalled = !0, setTimeout(function() {
                            k.youtubepausecalled = !1
                        }, 80)
                    } catch (i) {
                        console.log("Issue at YouTube Video Pause:"), console.log(i)
                    }
                    break;
                case "vimeo":
                    try {
                        var m = $f(i.find("iframe").attr("id"));
                        m.api("pause"), k.vimeopausecalled = !0, setTimeout(function() {
                            k.vimeopausecalled = !1
                        }, 80)
                    } catch (i) {
                        console.log("Issue at Vimeo Video Pause:"), console.log(i)
                    }
                    break;
                case "html5":
                    var A = "html5" == k.audio ? "audio" : "video",
                        B = i.find(A),
                        C = B[0];
                    void 0 != B && void 0 != C && C.pause()
            }
        },
        playVideo: function(b, c) {
            clearTimeout(b.data("videoplaywait"));
            var e = b.data();
            switch (e.videotype) {
                case "youtube":
                    if (0 == b.find("iframe").length) {
                        b.append(b.data("videomarkup")), u(b, c, !0)
                    } else {
                        if (void 0 != e.player.playVideo) {
                            var f = r(b.data("videostartat")),
                                h = e.player.getCurrentTime();
                            1 == b.data("nextslideatend-triggered") && (h = -1, b.data("nextslideatend-triggered", 0)), f != -1 && f > h && e.player.seekTo(f), e.youtubepausecalled !== !0 && e.player.playVideo()
                        } else {
                            b.data("videoplaywait", setTimeout(function() {
                                e.youtubepausecalled !== !0 && o.playVideo(b, c)
                            }, 50))
                        }
                    }
                    break;
                case "vimeo":
                    if (0 == b.find("iframe").length) {
                        b.append(b.data("videomarkup")), u(b, c, !0)
                    } else {
                        if (b.hasClass("rs-apiready")) {
                            var A = b.find("iframe").attr("id"),
                                B = $f(A);
                            void 0 == B.api("play") ? b.data("videoplaywait", setTimeout(function() {
                                e.vimeopausecalled !== !0 && o.playVideo(b, c)
                            }, 50)) : setTimeout(function() {
                                B.api("play");
                                var a = r(b.data("videostartat")),
                                    d = b.data("currenttime");
                                1 == b.data("nextslideatend-triggered") && (d = -1, b.data("nextslideatend-triggered", 0)), a != -1 && a > d && B.api("seekTo", a)
                            }, 510)
                        } else {
                            b.data("videoplaywait", setTimeout(function() {
                                e.vimeopausecalled !== !0 && o.playVideo(b, c)
                            }, 50))
                        }
                    }
                    break;
                case "html5":
                    if (p && 1 == b.data("disablevideoonmobile")) {
                        return !1
                    }
                    var C = "html5" == e.audio ? "audio" : "video",
                        D = b.find(C),
                        E = D[0],
                        F = D.parent();
                    if (1 != F.data("metaloaded")) {
                        s(E, "loadedmetadata", function(d) {
                            o.resetVideo(d, c), E.play();
                            var g = r(d.data("videostartat")),
                                i = E.currentTime;
                            1 == d.data("nextslideatend-triggered") && (i = -1, d.data("nextslideatend-triggered", 0)), g != -1 && g > i && (E.currentTime = g)
                        }(b))
                    } else {
                        E.play();
                        var f = r(b.data("videostartat")),
                            h = E.currentTime;
                        1 == b.data("nextslideatend-triggered") && (h = -1, b.data("nextslideatend-triggered", 0)), f != -1 && f > h && (E.currentTime = f)
                    }
            }
        },
        isVideoPlaying: function(d, e) {
            var f = !1;
            return void 0 != e.playingvideos && jQuery.each(e.playingvideos, function(a, c) {
                d.attr("id") == c.attr("id") && (f = !0)
            }), f
        },
        removeMediaFromList: function(c, d) {
            z(c, d)
        },
        prepareCoveredVideo: function(b, m, A) {
            var B = A.find("iframe, video"),
                C = b.split(":")[0],
                D = b.split(":")[1],
                E = A.closest(".tp-revslider-slidesli"),
                F = E.width() / E.height(),
                G = C / D,
                H = F / G * 100,
                I = G / F * 100;
            F > G ? punchgs.TweenLite.to(B, 0.001, {
                height: H + "%",
                width: "100%",
                top: -(H - 100) / 2 + "%",
                left: "0px",
                position: "absolute"
            }) : punchgs.TweenLite.to(B, 0.001, {
                width: I + "%",
                height: "100%",
                left: -(I - 100) / 2 + "%",
                top: "0px",
                position: "absolute"
            }), B.hasClass("resizelistener") || (B.addClass("resizelistener"), jQuery(window).resize(function() {
                clearTimeout(B.data("resizelistener")), B.data("resizelistener", setTimeout(function() {
                    o.prepareCoveredVideo(b, m, A)
                }, 30))
            }))
        },
        checkVideoApis: function(d, i, j) {
            "https:" === location.protocol ? "https" : "http";
            if ((void 0 != d.data("ytid") || d.find("iframe").length > 0 && d.find("iframe").attr("src").toLowerCase().indexOf("youtube") > 0) && (i.youtubeapineeded = !0), (void 0 != d.data("ytid") || d.find("iframe").length > 0 && d.find("iframe").attr("src").toLowerCase().indexOf("youtube") > 0) && 0 == j.addedyt) {
                i.youtubestarttime = jQuery.now(), j.addedyt = 1;
                var k = document.createElement("script");
                k.src = "https://www.youtube.com/iframe_api";
                var l = document.getElementsByTagName("script")[0],
                    m = !0;
                jQuery("head").find("*").each(function() {
                    "https://www.youtube.com/iframe_api" == jQuery(this).attr("src") && (m = !1)
                }), m && l.parentNode.insertBefore(k, l)
            }
            if ((void 0 != d.data("vimeoid") || d.find("iframe").length > 0 && d.find("iframe").attr("src").toLowerCase().indexOf("vimeo") > 0) && (i.vimeoapineeded = !0), (void 0 != d.data("vimeoid") || d.find("iframe").length > 0 && d.find("iframe").attr("src").toLowerCase().indexOf("vimeo") > 0) && 0 == j.addedvim) {
                i.vimeostarttime = jQuery.now(), j.addedvim = 1;
                var A = document.createElement("script"),
                    l = document.getElementsByTagName("script")[0],
                    m = !0;
                A.src = "https://secure-a.vimeocdn.com/js/froogaloop2.min.js", jQuery("head").find("*").each(function() {
                    "https://secure-a.vimeocdn.com/js/froogaloop2.min.js" == jQuery(this).attr("src") && (m = !1)
                }), m && l.parentNode.insertBefore(A, l)
            }
            return j
        },
        manageVideoLayer: function(b, I, L, M) {
            if ("stop" === o.compare_version(q).check) {
                return !1
            }
            var N = b.data(),
                O = N.videoattributes,
                P = N.ytid,
                Q = N.vimeoid,
                R = "auto" === N.videopreload || "canplay" === N.videopreload || "canplaythrough" === N.videopreload || "progress" === N.videopreload ? "auto" : N.videopreload,
                S = N.videomp4,
                T = N.videowebm,
                U = N.videoogv,
                V = N.allowfullscreenvideo,
                W = N.videocontrols,
                X = "http",
                Y = "loop" == N.videoloop ? "loop" : "loopandnoslidestop" == N.videoloop ? "loop" : "",
                Z = void 0 != S || void 0 != T ? "html5" : void 0 != P && String(P).length > 1 ? "youtube" : void 0 != Q && String(Q).length > 1 ? "vimeo" : "none",
                aa = "html5" == N.audio ? "audio" : "video",
                ab = "html5" == Z && 0 == b.find(aa).length ? "html5" : "youtube" == Z && 0 == b.find("iframe").length ? "youtube" : "vimeo" == Z && 0 == b.find("iframe").length ? "vimeo" : "none";
            switch (Y = N.nextslideatend === !0 ? "" : Y, N.videotype = Z, ab) {
                case "html5":
                    "controls" != W && (W = "");
                    var aa = "video";
                    "html5" == N.audio && (aa = "audio", b.addClass("tp-audio-html5"));
                    var c = "<" + aa + ' style="object-fit:cover;background-size:cover;visible:hidden;width:100%; height:100%" class="" ' + Y + ' preload="' + R + '">';
                    "auto" == R && (I.mediapreload = !0), void 0 != T && "firefox" == o.get_browser().toLowerCase() && (c = c + '<source src="' + T + '" type="video/webm" />'), void 0 != S && (c = c + '<source src="' + S + '" type="video/mp4" />'), void 0 != U && (c = c + '<source src="' + U + '" type="video/ogg" />'), c = c + "</" + aa + ">";
                    var d = "";
                    "true" !== V && V !== !0 || (d = '<div class="tp-video-button-wrap"><button  type="button" class="tp-video-button tp-vid-full-screen">Full-Screen</button></div>'), "controls" == W && (c += '<div class="tp-video-controls"><div class="tp-video-button-wrap"><button type="button" class="tp-video-button tp-vid-play-pause">Play</button></div><div class="tp-video-seek-bar-wrap"><input  type="range" class="tp-seek-bar" value="0"></div><div class="tp-video-button-wrap"><button  type="button" class="tp-video-button tp-vid-mute">Mute</button></div><div class="tp-video-vol-bar-wrap"><input  type="range" class="tp-volume-bar" min="0" max="1" step="0.1" value="1"></div>' + d + "</div>"), b.data("videomarkup", c), b.append(c), (p && 1 == b.data("disablevideoonmobile") || o.isIE(8)) && b.find(aa).remove(), b.find(aa).each(function(a) {
                        var g = this,
                            i = jQuery(this);
                        i.parent().hasClass("html5vid") || i.wrap('<div class="html5vid" style="position:relative;top:0px;left:0px;width:100%;height:100%; overflow:hidden;"></div>');
                        var j = i.parent();
                        1 != j.data("metaloaded") && s(g, "loadedmetadata", function(l) {
                            x(l, I), o.resetVideo(l, I)
                        }(b))
                    });
                    break;
                case "youtube":
                    X = "https", "none" == W && (O = O.replace("controls=1", "controls=0"), O.toLowerCase().indexOf("controls") == -1 && (O += "&controls=0")), N.videoinline !== !0 && "true" !== N.videoinline && 1 !== N.videoinline || (O += "&playsinline=1");
                    var e = r(b.data("videostartat")),
                        f = r(b.data("videoendat"));
                    e != -1 && (O = O + "&start=" + e), f != -1 && (O = O + "&end=" + f);
                    var h = O.split("origin=" + X + "://"),
                        k = "";
                    h.length > 1 ? (k = h[0] + "origin=" + X + "://", self.location.href.match(/www/gi) && !h[1].match(/www/gi) && (k += "www."), k += h[1]) : k = O;
                    var J = "true" === V || V === !0 ? "allowfullscreen" : "";
                    b.data("videomarkup", '<iframe type="text/html" src="' + X + "://www.youtube.com/embed/" + P + "?" + k + '" ' + J + ' width="100%" height="100%" style="opacity:0;visibility:hidden;width:100%;height:100%"></iframe>');
                    break;
                case "vimeo":
                    X = "https", b.data("videomarkup", '<iframe src="' + X + "://player.vimeo.com/video/" + Q + "?autoplay=0&" + O + '" webkitallowfullscreen mozallowfullscreen allowfullscreen width="100%" height="100%" style="opacity:0;visibility:hidden;100%;height:100%"></iframe>')
            }
            var K = p && "on" == b.data("noposteronmobile");
            if (void 0 != N.videoposter && N.videoposter.length > 2 && !K) {
                0 == b.find(".tp-videoposter").length && b.append('<div class="tp-videoposter noSwipe" style="cursor:pointer; position:absolute;top:0px;left:0px;width:100%;height:100%;z-index:3;background-image:url(' + N.videoposter + '); background-size:cover;background-position:center center;"></div>'), 0 == b.find("iframe").length && b.find(".tp-videoposter").click(function() {
                    if (o.playVideo(b, I), p) {
                        if (1 == b.data("disablevideoonmobile")) {
                            return !1
                        }
                        punchgs.TweenLite.to(b.find(".tp-videoposter"), 0.3, {
                            autoAlpha: 0,
                            force3D: "auto",
                            ease: punchgs.Power3.easeInOut
                        }), punchgs.TweenLite.to(b.find("iframe"), 0.3, {
                            autoAlpha: 1,
                            display: "block",
                            ease: punchgs.Power3.easeInOut
                        })
                    }
                })
            } else {
                if (p && 1 == b.data("disablevideoonmobile")) {
                    return !1
                }
                0 != b.find("iframe").length || "youtube" != Z && "vimeo" != Z || (b.append(b.data("videomarkup")), u(b, I, !1))
            }
            "none" != b.data("dottedoverlay") && void 0 != b.data("dottedoverlay") && 1 != b.find(".tp-dottedoverlay").length && b.append('<div class="tp-dottedoverlay ' + b.data("dottedoverlay") + '"></div>'), b.addClass("HasListener"), 1 == b.data("bgvideo") && punchgs.TweenLite.set(b.find("video, iframe"), {
                autoAlpha: 0
            })
        }
    });
    var s = function(d, e, f) {
            d.addEventListener ? d.addEventListener(e, f, {
                capture: !1,
                passive: !0
            }) : d.attachEvent(e, f, {
                capture: !1,
                passive: !0
            })
        },
        t = function(e, f, g) {
            var h = {};
            return h.video = e, h.videotype = f, h.settings = g, h
        },
        u = function(b, c, e) {
            var g = b.data(),
                i = b.find("iframe"),
                j = "iframe" + Math.round(100000 * Math.random() + 1),
                l = g.videoloop,
                m = "loopandnoslidestop" != l;
            if (l = "loop" == l || "loopandnoslidestop" == l, 1 == b.data("forcecover")) {
                b.removeClass("fullscreenvideo").addClass("coverscreenvideo");
                var A = b.data("aspectratio");
                void 0 != A && A.split(":").length > 1 && o.prepareCoveredVideo(A, c, b)
            }
            if (1 == b.data("bgvideo")) {
                var A = b.data("aspectratio");
                void 0 != A && A.split(":").length > 1 && o.prepareCoveredVideo(A, c, b)
            }
            if (i.attr("id", j), e && b.data("startvideonow", !0), 1 !== b.data("videolistenerexist")) {
                switch (g.videotype) {
                    case "youtube":
                        var B = new YT.Player(j, {
                            events: {
                                onStateChange: function(a) {
                                    var d = b.closest(".tp-simpleresponsive"),
                                        h = (g.videorate, b.data("videostart"), w());
                                    if (a.data == YT.PlayerState.PLAYING) {
                                        punchgs.TweenLite.to(b.find(".tp-videoposter"), 0.3, {
                                            autoAlpha: 0,
                                            force3D: "auto",
                                            ease: punchgs.Power3.easeInOut
                                        }), punchgs.TweenLite.to(b.find("iframe"), 0.3, {
                                            autoAlpha: 1,
                                            display: "block",
                                            ease: punchgs.Power3.easeInOut
                                        }), "mute" == b.data("volume") || o.lastToggleState(b.data("videomutetoggledby")) || c.globalmute === !0 ? B.mute() : (B.unMute(), B.setVolume(parseInt(b.data("volume"), 0) || 75)), c.videoplaying = !0, y(b, c), m ? c.c.trigger("stoptimer") : c.videoplaying = !1, c.c.trigger("revolution.slide.onvideoplay", t(B, "youtube", b.data())), o.toggleState(g.videotoggledby)
                                    } else {
                                        if (0 == a.data && l) {
                                            var k = r(b.data("videostartat"));
                                            k != -1 && B.seekTo(k), B.playVideo(), o.toggleState(g.videotoggledby)
                                        }!h && (0 == a.data || 2 == a.data) && "on" == b.data("showcoveronpause") && b.find(".tp-videoposter").length > 0 && (punchgs.TweenLite.to(b.find(".tp-videoposter"), 0.3, {
                                            autoAlpha: 1,
                                            force3D: "auto",
                                            ease: punchgs.Power3.easeInOut
                                        }), punchgs.TweenLite.to(b.find("iframe"), 0.3, {
                                            autoAlpha: 0,
                                            ease: punchgs.Power3.easeInOut
                                        })), a.data != -1 && 3 != a.data && (c.videoplaying = !1, c.tonpause = !1, z(b, c), d.trigger("starttimer"), c.c.trigger("revolution.slide.onvideostop", t(B, "youtube", b.data())), void 0 != c.currentLayerVideoIsPlaying && c.currentLayerVideoIsPlaying.attr("id") != b.attr("id") || o.unToggleState(g.videotoggledby)), 0 == a.data && 1 == b.data("nextslideatend") ? (v(), b.data("nextslideatend-triggered", 1), c.c.revnext(), z(b, c)) : (z(b, c), c.videoplaying = !1, d.trigger("starttimer"), c.c.trigger("revolution.slide.onvideostop", t(B, "youtube", b.data())), void 0 != c.currentLayerVideoIsPlaying && c.currentLayerVideoIsPlaying.attr("id") != b.attr("id") || o.unToggleState(g.videotoggledby))
                                    }
                                },
                                onReady: function(a) {
                                    var f = g.videorate;
                                    b.data("videostart");
                                    if (b.addClass("rs-apiready"), void 0 != f && a.target.setPlaybackRate(parseFloat(f)), b.find(".tp-videoposter").unbind("click"), b.find(".tp-videoposter").click(function() {
                                            p || B.playVideo()
                                        }), b.data("startvideonow")) {
                                        g.player.playVideo();
                                        var h = r(b.data("videostartat"));
                                        h != -1 && g.player.seekTo(h)
                                    }
                                    b.data("videolistenerexist", 1)
                                }
                            }
                        });
                        b.data("player", B);
                        break;
                    case "vimeo":
                        for (var G, C = i.attr("src"), D = {}, E = C, F = /([^&=]+)=([^&]*)/g; G = F.exec(E);) {
                            D[decodeURIComponent(G[1])] = decodeURIComponent(G[2])
                        }
                        C = void 0 != D.player_id ? C.replace(D.player_id, j) : C + "&player_id=" + j;
                        try {
                            C = C.replace("api=0", "api=1")
                        } catch (b) {}
                        C += "&api=1", i.attr("src", C);
                        var B = b.find("iframe")[0],
                            H = (jQuery("#" + j), $f(j));
                        H.addEvent("ready", function() {
                            if (b.addClass("rs-apiready"), H.addEvent("play", function(d) {
                                    b.data("nextslidecalled", 0), punchgs.TweenLite.to(b.find(".tp-videoposter"), 0.3, {
                                        autoAlpha: 0,
                                        force3D: "auto",
                                        ease: punchgs.Power3.easeInOut
                                    }), punchgs.TweenLite.to(b.find("iframe"), 0.3, {
                                        autoAlpha: 1,
                                        display: "block",
                                        ease: punchgs.Power3.easeInOut
                                    }), c.c.trigger("revolution.slide.onvideoplay", t(H, "vimeo", b.data())), c.videoplaying = !0, y(b, c), m ? c.c.trigger("stoptimer") : c.videoplaying = !1, "mute" == b.data("volume") || o.lastToggleState(b.data("videomutetoggledby")) || c.globalmute === !0 ? H.api("setVolume", "0") : H.api("setVolume", parseInt(b.data("volume"), 0) / 100 || 0.75), o.toggleState(g.videotoggledby)
                                }), H.addEvent("playProgress", function(d) {
                                    var h = r(b.data("videoendat"));
                                    if (b.data("currenttime", d.seconds), 0 != h && Math.abs(h - d.seconds) < 0.3 && h > d.seconds && 1 != b.data("nextslidecalled")) {
                                        if (l) {
                                            H.api("play");
                                            var k = r(b.data("videostartat"));
                                            k != -1 && H.api("seekTo", k)
                                        } else {
                                            1 == b.data("nextslideatend") && (b.data("nextslideatend-triggered", 1), b.data("nextslidecalled", 1), c.c.revnext()), H.api("pause")
                                        }
                                    }
                                }), H.addEvent("finish", function(d) {
                                    z(b, c), c.videoplaying = !1, c.c.trigger("starttimer"), c.c.trigger("revolution.slide.onvideostop", t(H, "vimeo", b.data())), 1 == b.data("nextslideatend") && (b.data("nextslideatend-triggered", 1), c.c.revnext()), void 0 != c.currentLayerVideoIsPlaying && c.currentLayerVideoIsPlaying.attr("id") != b.attr("id") || o.unToggleState(g.videotoggledby)
                                }), H.addEvent("pause", function(d) {
                                    b.find(".tp-videoposter").length > 0 && "on" == b.data("showcoveronpause") && (punchgs.TweenLite.to(b.find(".tp-videoposter"), 0.3, {
                                        autoAlpha: 1,
                                        force3D: "auto",
                                        ease: punchgs.Power3.easeInOut
                                    }), punchgs.TweenLite.to(b.find("iframe"), 0.3, {
                                        autoAlpha: 0,
                                        ease: punchgs.Power3.easeInOut
                                    })), c.videoplaying = !1, c.tonpause = !1, z(b, c), c.c.trigger("starttimer"), c.c.trigger("revolution.slide.onvideostop", t(H, "vimeo", b.data())), void 0 != c.currentLayerVideoIsPlaying && c.currentLayerVideoIsPlaying.attr("id") != b.attr("id") || o.unToggleState(g.videotoggledby)
                                }), b.find(".tp-videoposter").unbind("click"), b.find(".tp-videoposter").click(function() {
                                    if (!p) {
                                        return H.api("play"), !1
                                    }
                                }), b.data("startvideonow")) {
                                H.api("play");
                                var a = r(b.data("videostartat"));
                                a != -1 && H.api("seekTo", a)
                            }
                            b.data("videolistenerexist", 1)
                        })
                }
            } else {
                var I = r(b.data("videostartat"));
                switch (g.videotype) {
                    case "youtube":
                        e && (g.player.playVideo(), I != -1 && g.player.seekTo());
                        break;
                    case "vimeo":
                        if (e) {
                            var H = $f(b.find("iframe").attr("id"));
                            H.api("play"), I != -1 && H.api("seekTo", I)
                        }
                }
            }
        },
        v = function() {
            document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen()
        },
        w = function() {
            try {
                if (void 0 !== window.fullScreen) {
                    return window.fullScreen
                }
                var b = 5;
                return jQuery.browser.webkit && /Apple Computer/.test(navigator.vendor) && (b = 42), screen.width == window.innerWidth && Math.abs(screen.height - window.innerHeight) < b
            } catch (b) {}
        },
        x = function(b, c, e) {
            if (p && 1 == b.data("disablevideoonmobile")) {
                return !1
            }
            var f = b.data(),
                g = "html5" == f.audio ? "audio" : "video",
                i = b.find(g),
                j = i[0],
                l = i.parent(),
                m = f.videoloop,
                A = "loopandnoslidestop" != m;
            if (m = "loop" == m || "loopandnoslidestop" == m, l.data("metaloaded", 1), 1 != b.data("bgvideo") || "none" !== f.videoloop && f.videoloop !== !1 || (A = !1), void 0 == i.attr("control") && (0 != b.find(".tp-video-play-button").length || p || b.append('<div class="tp-video-play-button"><i class="revicon-right-dir"></i><span class="tp-revstop">&nbsp;</span></div>'), b.find("video, .tp-poster, .tp-video-play-button").click(function() {
                    b.hasClass("videoisplaying") ? j.pause() : j.play()
                })), 1 == b.data("forcecover") || b.hasClass("fullscreenvideo") || 1 == b.data("bgvideo")) {
                if (1 == b.data("forcecover") || 1 == b.data("bgvideo")) {
                    l.addClass("fullcoveredvideo");
                    var B = b.data("aspectratio") || "4:3";
                    o.prepareCoveredVideo(B, c, b)
                } else {
                    l.addClass("fullscreenvideo")
                }
            }
            var C = b.find(".tp-vid-play-pause")[0],
                D = b.find(".tp-vid-mute")[0],
                E = b.find(".tp-vid-full-screen")[0],
                F = b.find(".tp-seek-bar")[0],
                G = b.find(".tp-volume-bar")[0];
            void 0 != C && s(C, "click", function() {
                1 == j.paused ? j.play() : j.pause()
            }), void 0 != D && s(D, "click", function() {
                0 == j.muted ? (j.muted = !0, D.innerHTML = "Unmute") : (j.muted = !1, D.innerHTML = "Mute")
            }), void 0 != E && E && s(E, "click", function() {
                j.requestFullscreen ? j.requestFullscreen() : j.mozRequestFullScreen ? j.mozRequestFullScreen() : j.webkitRequestFullscreen && j.webkitRequestFullscreen()
            }), void 0 != F && (s(F, "change", function() {
                var d = j.duration * (F.value / 100);
                j.currentTime = d
            }), s(F, "mousedown", function() {
                b.addClass("seekbardragged"), j.pause()
            }), s(F, "mouseup", function() {
                b.removeClass("seekbardragged"), j.play()
            })), s(j, "canplaythrough", function() {
                o.preLoadAudioDone(b, c, "canplaythrough")
            }), s(j, "canplay", function() {
                o.preLoadAudioDone(b, c, "canplay")
            }), s(j, "progress", function() {
                o.preLoadAudioDone(b, c, "progress")
            }), s(j, "timeupdate", function() {
                var a = 100 / j.duration * j.currentTime,
                    d = r(b.data("videoendat")),
                    h = j.currentTime;
                if (void 0 != F && (F.value = a), 0 != d && d != -1 && Math.abs(d - h) <= 0.3 && d > h && 1 != b.data("nextslidecalled")) {
                    if (m) {
                        j.play();
                        var k = r(b.data("videostartat"));
                        k != -1 && (j.currentTime = k)
                    } else {
                        1 == b.data("nextslideatend") && (b.data("nextslideatend-triggered", 1), b.data("nextslidecalled", 1), c.just_called_nextslide_at_htmltimer = !0, c.c.revnext(), setTimeout(function() {
                            c.just_called_nextslide_at_htmltimer = !1
                        }, 1000)), j.pause()
                    }
                }
            }), void 0 != G && s(G, "change", function() {
                j.volume = G.value
            }), s(j, "play", function() {
                b.data("nextslidecalled", 0);
                var a = b.data("volume");
                a = void 0 != a && "mute" != a ? parseFloat(a) / 100 : a, c.globalmute === !0 ? j.muted = !0 : j.muted = !1, a > 1 && (a /= 100), "mute" == a ? j.muted = !0 : void 0 != a && (j.volume = a), b.addClass("videoisplaying");
                var d = "html5" == f.audio ? "audio" : "video";
                y(b, c), A && "audio" != d ? (c.videoplaying = !0, c.c.trigger("stoptimer"), c.c.trigger("revolution.slide.onvideoplay", t(j, "html5", f))) : (c.videoplaying = !1, "audio" != d && c.c.trigger("starttimer"), c.c.trigger("revolution.slide.onvideostop", t(j, "html5", f))), punchgs.TweenLite.to(b.find(".tp-videoposter"), 0.3, {
                    autoAlpha: 0,
                    force3D: "auto",
                    ease: punchgs.Power3.easeInOut
                }), punchgs.TweenLite.to(b.find(d), 0.3, {
                    autoAlpha: 1,
                    display: "block",
                    ease: punchgs.Power3.easeInOut
                });
                var k = b.find(".tp-vid-play-pause")[0],
                    H = b.find(".tp-vid-mute")[0];
                void 0 != k && (k.innerHTML = "Pause"), void 0 != H && j.muted && (H.innerHTML = "Unmute"), o.toggleState(f.videotoggledby)
            }), s(j, "pause", function() {
                var a = "html5" == f.audio ? "audio" : "video",
                    d = w();
                !d && b.find(".tp-videoposter").length > 0 && "on" == b.data("showcoveronpause") && !b.hasClass("seekbardragged") && (punchgs.TweenLite.to(b.find(".tp-videoposter"), 0.3, {
                    autoAlpha: 1,
                    force3D: "auto",
                    ease: punchgs.Power3.easeInOut
                }), punchgs.TweenLite.to(b.find(a), 0.3, {
                    autoAlpha: 0,
                    ease: punchgs.Power3.easeInOut
                })), b.removeClass("videoisplaying"), c.videoplaying = !1, z(b, c), "audio" != a && c.c.trigger("starttimer"), c.c.trigger("revolution.slide.onvideostop", t(j, "html5", b.data()));
                var h = b.find(".tp-vid-play-pause")[0];
                void 0 != h && (h.innerHTML = "Play"), void 0 != c.currentLayerVideoIsPlaying && c.currentLayerVideoIsPlaying.attr("id") != b.attr("id") || o.unToggleState(f.videotoggledby)
            }), s(j, "ended", function() {
                v(), z(b, c), c.videoplaying = !1, z(b, c), "audio" != g && c.c.trigger("starttimer"), c.c.trigger("revolution.slide.onvideostop", t(j, "html5", b.data())), b.data("nextslideatend") === !0 && j.currentTime > 0 && (1 == !c.just_called_nextslide_at_htmltimer && (b.data("nextslideatend-triggered", 1), c.c.revnext(), c.just_called_nextslide_at_htmltimer = !0), setTimeout(function() {
                    c.just_called_nextslide_at_htmltimer = !1
                }, 1500)), b.removeClass("videoisplaying")
            })
        },
        y = function(b, d) {
            void 0 == d.playingvideos && (d.playingvideos = new Array), b.data("stopallvideos") && void 0 != d.playingvideos && d.playingvideos.length > 0 && (d.lastplayedvideos = jQuery.extend(!0, [], d.playingvideos), jQuery.each(d.playingvideos, function(c, e) {
                o.stopVideo(e, d)
            })), d.playingvideos.push(b), d.currentLayerVideoIsPlaying = b
        },
        z = function(c, d) {
            void 0 != d.playingvideos && jQuery.inArray(c, d.playingvideos) >= 0 && d.playingvideos.splice(jQuery.inArray(c, d.playingvideos), 1)
        }
}(jQuery);