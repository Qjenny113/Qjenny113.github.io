! function(h) {
    var i = jQuery.fn.revolution,
        j = {
            alias: "SlideAnimations Min JS",
            name: "revolution.extensions.slideanims.min.js",
            min_core: "5.0",
            version: "1.6"
        };
    jQuery.extend(!0, i, {
        animateSlide: function(b, c, g, o, p, q, r, s) {
            return "stop" === i.compare_version(j).check ? s : n(b, c, g, o, p, q, r, s)
        }
    });
    var k = function(b, y, z, A) {
            var B = b,
                C = B.find(".defaultimg"),
                D = C.data("mediafilter"),
                E = B.data("zoomstart"),
                F = B.data("rotationstart");
            void 0 != C.data("currotate") && (F = C.data("currotate")), void 0 != C.data("curscale") && "box" == A ? E = 100 * C.data("curscale") : void 0 != C.data("curscale") && (E = C.data("curscale")), i.slotSize(C, y);
            var G = C.attr("src"),
                H = C.css("backgroundColor"),
                I = y.width,
                J = y.height,
                K = C.data("fxof"),
                L = 0;
            "on" == y.autoHeight && (J = y.c.height()), void 0 == K && (K = 0);
            var M = 0,
                N = C.data("bgfit"),
                O = C.data("bgrepeat"),
                P = C.data("bgposition");
            switch (void 0 == N && (N = "cover"), void 0 == O && (O = "no-repeat"), void 0 == P && (P = "center center"), A) {
                case "box":
                    for (var Q = 0, R = 0, S = 0; S < y.slots; S++) {
                        R = 0;
                        for (var T = 0; T < y.slots; T++) {
                            B.append('<div class="slot" style="position:absolute;top:' + (L + R) + "px;left:" + (K + Q) + "px;width:" + y.slotw + "px;height:" + y.sloth + 'px;overflow:hidden;"><div class="slotslide ' + D + '" data-x="' + Q + '" data-y="' + R + '" style="position:absolute;top:0px;left:0px;width:' + y.slotw + "px;height:" + y.sloth + 'px;overflow:hidden;"><div style="position:absolute;top:' + (0 - R) + "px;left:" + (0 - Q) + "px;width:" + I + "px;height:" + J + "px;background-color:" + H + ";background-image:url(" + G + ");background-repeat:" + O + ";background-size:" + N + ";background-position:" + P + ';"></div></div></div>'), R += y.sloth, void 0 != E && void 0 != F && punchgs.TweenLite.set(B.find(".slot").last(), {
                                rotationZ: F
                            })
                        }
                        Q += y.slotw
                    }
                    break;
                case "vertical":
                case "horizontal":
                    if ("horizontal" == A) {
                        if (!z) {
                            var M = 0 - y.slotw
                        }
                        for (var T = 0; T < y.slots; T++) {
                            B.append('<div class="slot" style="position:absolute;top:' + (0 + L) + "px;left:" + (K + T * y.slotw) + "px;overflow:hidden;width:" + (y.slotw + 0.3) + "px;height:" + J + 'px"><div class="slotslide ' + D + '" style="position:absolute;top:0px;left:' + M + "px;width:" + (y.slotw + 0.6) + "px;height:" + J + 'px;overflow:hidden;"><div style="background-color:' + H + ";position:absolute;top:0px;left:" + (0 - T * y.slotw) + "px;width:" + I + "px;height:" + J + "px;background-image:url(" + G + ");background-repeat:" + O + ";background-size:" + N + ";background-position:" + P + ';"></div></div></div>'), void 0 != E && void 0 != F && punchgs.TweenLite.set(B.find(".slot").last(), {
                                rotationZ: F
                            })
                        }
                    } else {
                        if (!z) {
                            var M = 0 - y.sloth
                        }
                        for (var T = 0; T < y.slots + 2; T++) {
                            B.append('<div class="slot" style="position:absolute;top:' + (L + T * y.sloth) + "px;left:" + K + "px;overflow:hidden;width:" + I + "px;height:" + y.sloth + 'px"><div class="slotslide ' + D + '" style="position:absolute;top:' + M + "px;left:0px;width:" + I + "px;height:" + y.sloth + 'px;overflow:hidden;"><div style="background-color:' + H + ";position:absolute;top:" + (0 - T * y.sloth) + "px;left:0px;width:" + I + "px;height:" + J + "px;background-image:url(" + G + ");background-repeat:" + O + ";background-size:" + N + ";background-position:" + P + ';"></div></div></div>'), void 0 != E && void 0 != F && punchgs.TweenLite.set(B.find(".slot").last(), {
                                rotationZ: F
                            })
                        }
                    }
            }
        },
        l = function(u, A, B, C) {
            function V() {
                jQuery.each(S, function(b, d) {
                    d[0] != A && d[8] != A || (O = d[1], P = d[2], Q = R), R += 1
                })
            }
            var D = u[0].opt,
                E = punchgs.Power1.easeIn,
                F = punchgs.Power1.easeOut,
                G = punchgs.Power1.easeInOut,
                H = punchgs.Power2.easeIn,
                I = punchgs.Power2.easeOut,
                J = punchgs.Power2.easeInOut,
                K = (punchgs.Power3.easeIn, punchgs.Power3.easeOut),
                L = punchgs.Power3.easeInOut,
                M = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45],
                N = [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27],
                O = 0,
                P = 1,
                Q = 0,
                R = 0,
                S = (new Array, [
                    ["boxslide", 0, 1, 10, 0, "box", !1, null, 0, F, F, 500, 6],
                    ["boxfade", 1, 0, 10, 0, "box", !1, null, 1, G, G, 700, 5],
                    ["slotslide-horizontal", 2, 0, 0, 200, "horizontal", !0, !1, 2, J, J, 700, 3],
                    ["slotslide-vertical", 3, 0, 0, 200, "vertical", !0, !1, 3, J, J, 700, 3],
                    ["curtain-1", 4, 3, 0, 0, "horizontal", !0, !0, 4, F, F, 300, 5],
                    ["curtain-2", 5, 3, 0, 0, "horizontal", !0, !0, 5, F, F, 300, 5],
                    ["curtain-3", 6, 3, 25, 0, "horizontal", !0, !0, 6, F, F, 300, 5],
                    ["slotzoom-horizontal", 7, 0, 0, 400, "horizontal", !0, !0, 7, F, F, 300, 7],
                    ["slotzoom-vertical", 8, 0, 0, 0, "vertical", !0, !0, 8, I, I, 500, 8],
                    ["slotfade-horizontal", 9, 0, 0, 1000, "horizontal", !0, null, 9, I, I, 2000, 10],
                    ["slotfade-vertical", 10, 0, 0, 1000, "vertical", !0, null, 10, I, I, 2000, 10],
                    ["fade", 11, 0, 1, 300, "horizontal", !0, null, 11, J, J, 1000, 1],
                    ["crossfade", 11, 1, 1, 300, "horizontal", !0, null, 11, J, J, 1000, 1],
                    ["fadethroughdark", 11, 2, 1, 300, "horizontal", !0, null, 11, J, J, 1000, 1],
                    ["fadethroughlight", 11, 3, 1, 300, "horizontal", !0, null, 11, J, J, 1000, 1],
                    ["fadethroughtransparent", 11, 4, 1, 300, "horizontal", !0, null, 11, J, J, 1000, 1],
                    ["slideleft", 12, 0, 1, 0, "horizontal", !0, !0, 12, L, L, 1000, 1],
                    ["slideup", 13, 0, 1, 0, "horizontal", !0, !0, 13, L, L, 1000, 1],
                    ["slidedown", 14, 0, 1, 0, "horizontal", !0, !0, 14, L, L, 1000, 1],
                    ["slideright", 15, 0, 1, 0, "horizontal", !0, !0, 15, L, L, 1000, 1],
                    ["slideoverleft", 12, 7, 1, 0, "horizontal", !0, !0, 12, L, L, 1000, 1],
                    ["slideoverup", 13, 7, 1, 0, "horizontal", !0, !0, 13, L, L, 1000, 1],
                    ["slideoverdown", 14, 7, 1, 0, "horizontal", !0, !0, 14, L, L, 1000, 1],
                    ["slideoverright", 15, 7, 1, 0, "horizontal", !0, !0, 15, L, L, 1000, 1],
                    ["slideremoveleft", 12, 8, 1, 0, "horizontal", !0, !0, 12, L, L, 1000, 1],
                    ["slideremoveup", 13, 8, 1, 0, "horizontal", !0, !0, 13, L, L, 1000, 1],
                    ["slideremovedown", 14, 8, 1, 0, "horizontal", !0, !0, 14, L, L, 1000, 1],
                    ["slideremoveright", 15, 8, 1, 0, "horizontal", !0, !0, 15, L, L, 1000, 1],
                    ["papercut", 16, 0, 0, 600, "", null, null, 16, L, L, 1000, 2],
                    ["3dcurtain-horizontal", 17, 0, 20, 100, "vertical", !1, !0, 17, G, G, 500, 7],
                    ["3dcurtain-vertical", 18, 0, 10, 100, "horizontal", !1, !0, 18, G, G, 500, 5],
                    ["cubic", 19, 0, 20, 600, "horizontal", !1, !0, 19, L, L, 500, 1],
                    ["cube", 19, 0, 20, 600, "horizontal", !1, !0, 20, L, L, 500, 1],
                    ["flyin", 20, 0, 4, 600, "vertical", !1, !0, 21, K, L, 500, 1],
                    ["turnoff", 21, 0, 1, 500, "horizontal", !1, !0, 22, L, L, 500, 1],
                    ["incube", 22, 0, 20, 200, "horizontal", !1, !0, 23, J, J, 500, 1],
                    ["cubic-horizontal", 23, 0, 20, 500, "vertical", !1, !0, 24, I, I, 500, 1],
                    ["cube-horizontal", 23, 0, 20, 500, "vertical", !1, !0, 25, I, I, 500, 1],
                    ["incube-horizontal", 24, 0, 20, 500, "vertical", !1, !0, 26, J, J, 500, 1],
                    ["turnoff-vertical", 25, 0, 1, 200, "horizontal", !1, !0, 27, J, J, 500, 1],
                    ["fadefromright", 14, 1, 1, 0, "horizontal", !0, !0, 28, J, J, 1000, 1],
                    ["fadefromleft", 15, 1, 1, 0, "horizontal", !0, !0, 29, J, J, 1000, 1],
                    ["fadefromtop", 14, 1, 1, 0, "horizontal", !0, !0, 30, J, J, 1000, 1],
                    ["fadefrombottom", 13, 1, 1, 0, "horizontal", !0, !0, 31, J, J, 1000, 1],
                    ["fadetoleftfadefromright", 12, 2, 1, 0, "horizontal", !0, !0, 32, J, J, 1000, 1],
                    ["fadetorightfadefromleft", 15, 2, 1, 0, "horizontal", !0, !0, 33, J, J, 1000, 1],
                    ["fadetobottomfadefromtop", 14, 2, 1, 0, "horizontal", !0, !0, 34, J, J, 1000, 1],
                    ["fadetotopfadefrombottom", 13, 2, 1, 0, "horizontal", !0, !0, 35, J, J, 1000, 1],
                    ["parallaxtoright", 15, 3, 1, 0, "horizontal", !0, !0, 36, J, H, 1500, 1],
                    ["parallaxtoleft", 12, 3, 1, 0, "horizontal", !0, !0, 37, J, H, 1500, 1],
                    ["parallaxtotop", 14, 3, 1, 0, "horizontal", !0, !0, 38, J, E, 1500, 1],
                    ["parallaxtobottom", 13, 3, 1, 0, "horizontal", !0, !0, 39, J, E, 1500, 1],
                    ["scaledownfromright", 12, 4, 1, 0, "horizontal", !0, !0, 40, J, H, 1000, 1],
                    ["scaledownfromleft", 15, 4, 1, 0, "horizontal", !0, !0, 41, J, H, 1000, 1],
                    ["scaledownfromtop", 14, 4, 1, 0, "horizontal", !0, !0, 42, J, H, 1000, 1],
                    ["scaledownfrombottom", 13, 4, 1, 0, "horizontal", !0, !0, 43, J, H, 1000, 1],
                    ["zoomout", 13, 5, 1, 0, "horizontal", !0, !0, 44, J, H, 1000, 1],
                    ["zoomin", 13, 6, 1, 0, "horizontal", !0, !0, 45, J, H, 1000, 1],
                    ["slidingoverlayup", 27, 0, 1, 0, "horizontal", !0, !0, 47, G, F, 2000, 1],
                    ["slidingoverlaydown", 28, 0, 1, 0, "horizontal", !0, !0, 48, G, F, 2000, 1],
                    ["slidingoverlayright", 30, 0, 1, 0, "horizontal", !0, !0, 49, G, F, 2000, 1],
                    ["slidingoverlayleft", 29, 0, 1, 0, "horizontal", !0, !0, 50, G, F, 2000, 1],
                    ["parallaxcirclesup", 31, 0, 1, 0, "horizontal", !0, !0, 51, J, E, 1500, 1],
                    ["parallaxcirclesdown", 32, 0, 1, 0, "horizontal", !0, !0, 52, J, E, 1500, 1],
                    ["parallaxcirclesright", 33, 0, 1, 0, "horizontal", !0, !0, 53, J, E, 1500, 1],
                    ["parallaxcirclesleft", 34, 0, 1, 0, "horizontal", !0, !0, 54, J, E, 1500, 1],
                    ["notransition", 26, 0, 1, 0, "horizontal", !0, null, 46, J, H, 1000, 1],
                    ["parallaxright", 15, 3, 1, 0, "horizontal", !0, !0, 55, J, H, 1500, 1],
                    ["parallaxleft", 12, 3, 1, 0, "horizontal", !0, !0, 56, J, H, 1500, 1],
                    ["parallaxup", 14, 3, 1, 0, "horizontal", !0, !0, 57, J, E, 1500, 1],
                    ["parallaxdown", 13, 3, 1, 0, "horizontal", !0, !0, 58, J, E, 1500, 1]
                ]);
            D.duringslidechange = !0, D.testanims = !1, 1 == D.testanims && (D.nexttesttransform = void 0 === D.nexttesttransform ? 34 : D.nexttesttransform + 1, D.nexttesttransform = D.nexttesttransform > 70 ? 0 : D.nexttesttransform, A = S[D.nexttesttransform][0], console.log(A + "  " + D.nexttesttransform + "  " + S[D.nexttesttransform][1] + "  " + S[D.nexttesttransform][2])), jQuery.each(["parallaxcircles", "slidingoverlay", "slide", "slideover", "slideremove", "parallax", "parralaxto"], function(b, d) {
                A == d + "horizontal" && (A = 1 != C ? d + "left" : d + "right"), A == d + "vertical" && (A = 1 != C ? d + "up" : d + "down")
            }), "random" == A && (A = Math.round(Math.random() * S.length - 1), A > S.length - 1 && (A = S.length - 1)), "random-static" == A && (A = Math.round(Math.random() * M.length - 1), A > M.length - 1 && (A = M.length - 1), A = M[A]), "random-premium" == A && (A = Math.round(Math.random() * N.length - 1), A > N.length - 1 && (A = N.length - 1), A = N[A]);
            var T = [12, 13, 14, 15, 16, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45];
            if (1 == D.isJoomla && void 0 != window.MooTools && T.indexOf(A) != -1) {
                var U = Math.round(Math.random() * (N.length - 2)) + 1;
                U > N.length - 1 && (U = N.length - 1), 0 == U && (U = 1), A = N[U]
            }
            V(), O > 30 && (O = 30), O < 0 && (O = 0);
            var W = new Object;
            return W.nexttrans = O, W.STA = S[Q], W.specials = P, W
        },
        m = function(c, d) {
            return void 0 == d || jQuery.isNumeric(c) ? c : void 0 == c ? c : c.split(",")[d]
        },
        n = function(f, ac, af, am, ap, at, av, ay) {
            function a6(o, p, q, r, s) {
                var t = o.find(".slot"),
                    u = 6,
                    v = [2, 1.2, 0.9, 0.7, 0.55, 0.42],
                    w = o.width(),
                    x = o.height();
                t.wrap('<div class="slot-circle-wrapper" style="overflow:hidden;position:absolute;border:1px solid #fff"></div>');
                for (var y = 0; y < u; y++) {
                    t.parent().clone(!1).appendTo(at)
                }
                o.find(".slot-circle-wrapper").each(function(b) {
                    if (b < u) {
                        var c = jQuery(this),
                            g = c.find(".slot"),
                            A = w > x ? v[b] * w : v[b] * x,
                            B = A,
                            D = 0 + (B / 2 - w / 2),
                            E = 0 + (A / 2 - x / 2),
                            F = 0 != b ? "50%" : "0",
                            G = 31 == q ? x / 2 - A / 2 : 32 == q ? x / 2 - A / 2 : x / 2 - A / 2,
                            H = 33 == q ? w / 2 - B / 2 : 34 == q ? w - B : w / 2 - B / 2,
                            I = {
                                scale: 1,
                                transformOrigo: "50% 50%",
                                width: B + "px",
                                height: A + "px",
                                top: G + "px",
                                left: H + "px",
                                borderRadius: F
                            },
                            J = {
                                scale: 1,
                                top: x / 2 - A / 2,
                                left: w / 2 - B / 2,
                                ease: s
                            },
                            K = 31 == q ? E : 32 == q ? E : E,
                            L = 33 == q ? D : 34 == q ? D + w / 2 : D,
                            M = {
                                width: w,
                                height: x,
                                autoAlpha: 1,
                                top: K + "px",
                                position: "absolute",
                                left: L + "px"
                            },
                            N = {
                                top: E + "px",
                                left: D + "px",
                                ease: s
                            },
                            O = p,
                            P = 0;
                        ay.add(punchgs.TweenLite.fromTo(c, O, I, J), P), ay.add(punchgs.TweenLite.fromTo(g, O, M, N), P), ay.add(punchgs.TweenLite.fromTo(c, 0.001, {
                            autoAlpha: 0
                        }, {
                            autoAlpha: 1
                        }), 0)
                    }
                })
            }
            var aB = af[0].opt,
                aE = ap.index(),
                aH = am.index(),
                aK = aH < aE ? 1 : 0;
            "arrow" == aB.sc_indicator && (aK = aB.sc_indicator_dir);
            var aN = l(af, ac, at, aK),
                aQ = aN.STA,
                aT = aN.specials,
                f = aN.nexttrans;
            "on" == at.data("kenburns") && (f = 11);
            var aW = am.data("nexttransid") || 0,
                aZ = m(am.data("masterspeed"), aW);
            aZ = "default" === aZ ? aQ[11] : "random" === aZ ? Math.round(1000 * Math.random() + 300) : void 0 != aZ ? parseInt(aZ, 0) : aQ[11], aZ = aZ > aB.delay ? aB.delay : aZ, aZ += aQ[4], aB.slots = m(am.data("slotamount"), aW), aB.slots = void 0 == aB.slots || "default" == aB.slots ? aQ[12] : "random" == aB.slots ? Math.round(12 * Math.random() + 4) : aB.slots, aB.slots = aB.slots < 1 ? "boxslide" == ac ? Math.round(6 * Math.random() + 3) : "flyin" == ac ? Math.round(4 * Math.random() + 1) : aB.slots : aB.slots, aB.slots = (4 == f || 5 == f || 6 == f) && aB.slots < 3 ? 3 : aB.slots, aB.slots = 0 != aQ[3] ? Math.min(aB.slots, aQ[3]) : aB.slots, aB.slots = 9 == f ? aB.width / aB.slots : 10 == f ? aB.height / aB.slots : aB.slots, aB.rotate = m(am.data("rotate"), aW), aB.rotate = void 0 == aB.rotate || "default" == aB.rotate ? 0 : 999 == aB.rotate || "random" == aB.rotate ? Math.round(360 * Math.random()) : aB.rotate, aB.rotate = !jQuery.support.transition || aB.ie || aB.ie9 ? 0 : aB.rotate, 11 != f && (null != aQ[7] && k(av, aB, aQ[7], aQ[5]), null != aQ[6] && k(at, aB, aQ[6], aQ[5])), ay.add(punchgs.TweenLite.set(at.find(".defaultvid"), {
                y: 0,
                x: 0,
                top: 0,
                left: 0,
                scale: 1
            }), 0), ay.add(punchgs.TweenLite.set(av.find(".defaultvid"), {
                y: 0,
                x: 0,
                top: 0,
                left: 0,
                scale: 1
            }), 0), ay.add(punchgs.TweenLite.set(at.find(".defaultvid"), {
                y: "+0%",
                x: "+0%"
            }), 0), ay.add(punchgs.TweenLite.set(av.find(".defaultvid"), {
                y: "+0%",
                x: "+0%"
            }), 0), ay.add(punchgs.TweenLite.set(at, {
                autoAlpha: 1,
                y: "+0%",
                x: "+0%"
            }), 0), ay.add(punchgs.TweenLite.set(av, {
                autoAlpha: 1,
                y: "+0%",
                x: "+0%"
            }), 0), ay.add(punchgs.TweenLite.set(at.parent(), {
                backgroundColor: "transparent"
            }), 0), ay.add(punchgs.TweenLite.set(av.parent(), {
                backgroundColor: "transparent"
            }), 0);
            var a2 = m(am.data("easein"), aW),
                a5 = m(am.data("easeout"), aW);
            if (a2 = "default" === a2 ? aQ[9] || punchgs.Power2.easeInOut : a2 || aQ[9] || punchgs.Power2.easeInOut, a5 = "default" === a5 ? aQ[10] || punchgs.Power2.easeInOut : a5 || aQ[10] || punchgs.Power2.easeInOut, 0 == f) {
                var a8 = Math.ceil(aB.height / aB.sloth),
                    bb = 0;
                at.find(".slotslide").each(function(c) {
                    var g = jQuery(this);
                    bb += 1, bb == a8 && (bb = 0), ay.add(punchgs.TweenLite.from(g, aZ / 600, {
                        opacity: 0,
                        top: 0 - aB.sloth,
                        left: 0 - aB.slotw,
                        rotation: aB.rotate,
                        force3D: "auto",
                        ease: a2
                    }), (15 * c + 30 * bb) / 1500)
                })
            }
            if (1 == f) {
                var bd, bf = 0;
                at.find(".slotslide").each(function(g) {
                    var o = jQuery(this),
                        p = Math.random() * aZ + 300,
                        q = 500 * Math.random() + 200;
                    p + q > bd && (bd = q + q, bf = g), ay.add(punchgs.TweenLite.from(o, p / 1000, {
                        autoAlpha: 0,
                        force3D: "auto",
                        rotation: aB.rotate,
                        ease: a2
                    }), q / 1000)
                })
            }
            if (2 == f) {
                var C = new punchgs.TimelineLite;
                av.find(".slotslide").each(function() {
                    var b = jQuery(this);
                    C.add(punchgs.TweenLite.to(b, aZ / 1000, {
                        left: aB.slotw,
                        ease: a2,
                        force3D: "auto",
                        rotation: 0 - aB.rotate
                    }), 0), ay.add(C, 0)
                }), at.find(".slotslide").each(function() {
                    var b = jQuery(this);
                    C.add(punchgs.TweenLite.from(b, aZ / 1000, {
                        left: 0 - aB.slotw,
                        ease: a2,
                        force3D: "auto",
                        rotation: aB.rotate
                    }), 0), ay.add(C, 0)
                })
            }
            if (3 == f) {
                var C = new punchgs.TimelineLite;
                av.find(".slotslide").each(function() {
                    var b = jQuery(this);
                    C.add(punchgs.TweenLite.to(b, aZ / 1000, {
                        top: aB.sloth,
                        ease: a2,
                        rotation: aB.rotate,
                        force3D: "auto",
                        transformPerspective: 600
                    }), 0), ay.add(C, 0)
                }), at.find(".slotslide").each(function() {
                    var b = jQuery(this);
                    C.add(punchgs.TweenLite.from(b, aZ / 1000, {
                        top: 0 - aB.sloth,
                        rotation: aB.rotate,
                        ease: a5,
                        force3D: "auto",
                        transformPerspective: 600
                    }), 0), ay.add(C, 0)
                })
            }
            if (4 == f || 5 == f) {
                setTimeout(function() {
                    av.find(".defaultimg").css({
                        opacity: 0
                    })
                }, 100);
                var ad = aZ / 1000,
                    C = new punchgs.TimelineLite;
                av.find(".slotslide").each(function(a) {
                    var g = jQuery(this),
                        o = a * ad / aB.slots;
                    5 == f && (o = (aB.slots - a - 1) * ad / aB.slots / 1.5), C.add(punchgs.TweenLite.to(g, 3 * ad, {
                        transformPerspective: 600,
                        force3D: "auto",
                        top: 0 + aB.height,
                        opacity: 0.5,
                        rotation: aB.rotate,
                        ease: a2,
                        delay: o
                    }), 0), ay.add(C, 0)
                }), at.find(".slotslide").each(function(a) {
                    var g = jQuery(this),
                        o = a * ad / aB.slots;
                    5 == f && (o = (aB.slots - a - 1) * ad / aB.slots / 1.5), C.add(punchgs.TweenLite.from(g, 3 * ad, {
                        top: 0 - aB.height,
                        opacity: 0.5,
                        rotation: aB.rotate,
                        force3D: "auto",
                        ease: punchgs.eo,
                        delay: o
                    }), 0), ay.add(C, 0)
                })
            }
            if (6 == f) {
                aB.slots < 2 && (aB.slots = 2), aB.slots % 2 && (aB.slots = aB.slots + 1);
                var C = new punchgs.TimelineLite;
                setTimeout(function() {
                    av.find(".defaultimg").css({
                        opacity: 0
                    })
                }, 100), av.find(".slotslide").each(function(g) {
                    var o = jQuery(this);
                    if (g + 1 < aB.slots / 2) {
                        var p = 90 * (g + 2)
                    } else {
                        var p = 90 * (2 + aB.slots - g)
                    }
                    C.add(punchgs.TweenLite.to(o, (aZ + p) / 1000, {
                        top: 0 + aB.height,
                        opacity: 1,
                        force3D: "auto",
                        rotation: aB.rotate,
                        ease: a2
                    }), 0), ay.add(C, 0)
                }), at.find(".slotslide").each(function(g) {
                    var o = jQuery(this);
                    if (g + 1 < aB.slots / 2) {
                        var p = 90 * (g + 2)
                    } else {
                        var p = 90 * (2 + aB.slots - g)
                    }
                    C.add(punchgs.TweenLite.from(o, (aZ + p) / 1000, {
                        top: 0 - aB.height,
                        opacity: 1,
                        force3D: "auto",
                        rotation: aB.rotate,
                        ease: a5
                    }), 0), ay.add(C, 0)
                })
            }
            if (7 == f) {
                aZ = 2 * aZ, aZ > aB.delay && (aZ = aB.delay);
                var C = new punchgs.TimelineLite;
                setTimeout(function() {
                    av.find(".defaultimg").css({
                        opacity: 0
                    })
                }, 100), av.find(".slotslide").each(function() {
                    var b = jQuery(this).find("div");
                    C.add(punchgs.TweenLite.to(b, aZ / 1000, {
                        left: 0 - aB.slotw / 2 + "px",
                        top: 0 - aB.height / 2 + "px",
                        width: 2 * aB.slotw + "px",
                        height: 2 * aB.height + "px",
                        opacity: 0,
                        rotation: aB.rotate,
                        force3D: "auto",
                        ease: a2
                    }), 0), ay.add(C, 0)
                }), at.find(".slotslide").each(function(c) {
                    var g = jQuery(this).find("div");
                    C.add(punchgs.TweenLite.fromTo(g, aZ / 1000, {
                        left: 0,
                        top: 0,
                        opacity: 0,
                        transformPerspective: 600
                    }, {
                        left: 0 - c * aB.slotw + "px",
                        ease: a5,
                        force3D: "auto",
                        top: "0px",
                        width: aB.width,
                        height: aB.height,
                        opacity: 1,
                        rotation: 0,
                        delay: 0.1
                    }), 0), ay.add(C, 0)
                })
            }
            if (8 == f) {
                aZ = 3 * aZ, aZ > aB.delay && (aZ = aB.delay);
                var C = new punchgs.TimelineLite;
                av.find(".slotslide").each(function() {
                    var b = jQuery(this).find("div");
                    C.add(punchgs.TweenLite.to(b, aZ / 1000, {
                        left: 0 - aB.width / 2 + "px",
                        top: 0 - aB.sloth / 2 + "px",
                        width: 2 * aB.width + "px",
                        height: 2 * aB.sloth + "px",
                        force3D: "auto",
                        ease: a2,
                        opacity: 0,
                        rotation: aB.rotate
                    }), 0), ay.add(C, 0)
                }), at.find(".slotslide").each(function(c) {
                    var g = jQuery(this).find("div");
                    C.add(punchgs.TweenLite.fromTo(g, aZ / 1000, {
                        left: 0,
                        top: 0,
                        opacity: 0,
                        force3D: "auto"
                    }, {
                        left: "0px",
                        top: 0 - c * aB.sloth + "px",
                        width: at.find(".defaultimg").data("neww") + "px",
                        height: at.find(".defaultimg").data("newh") + "px",
                        opacity: 1,
                        ease: a5,
                        rotation: 0
                    }), 0), ay.add(C, 0)
                })
            }
            if (9 == f || 10 == f) {
                var ah = 0;
                at.find(".slotslide").each(function(c) {
                    var g = jQuery(this);
                    ah++, ay.add(punchgs.TweenLite.fromTo(g, aZ / 2000, {
                        autoAlpha: 0,
                        force3D: "auto",
                        transformPerspective: 600
                    }, {
                        autoAlpha: 1,
                        ease: a2,
                        delay: c * aB.slots / 100 / 2000
                    }), 0)
                })
            }
            if (27 == f || 28 == f || 29 == f || 30 == f) {
                var aj = at.find(".slot"),
                    al = 27 == f || 28 == f ? 1 : 2,
                    an = 27 == f || 29 == f ? "-100%" : "+100%",
                    aq = 27 == f || 29 == f ? "+100%" : "-100%",
                    au = 27 == f || 29 == f ? "-80%" : "80%",
                    aw = 27 == f || 29 == f ? "+80%" : "-80%",
                    az = 27 == f || 29 == f ? "+10%" : "-10%",
                    aC = {
                        overwrite: "all"
                    },
                    aF = {
                        autoAlpha: 0,
                        zIndex: 1,
                        force3D: "auto",
                        ease: a2
                    },
                    aI = {
                        position: "inherit",
                        autoAlpha: 0,
                        overwrite: "all",
                        zIndex: 1
                    },
                    aL = {
                        autoAlpha: 1,
                        force3D: "auto",
                        ease: a5
                    },
                    aO = {
                        overwrite: "all",
                        zIndex: 2,
                        opacity: 1,
                        autoAlpha: 1
                    },
                    aR = {
                        autoAlpha: 1,
                        force3D: "auto",
                        overwrite: "all",
                        ease: a2
                    },
                    aU = {
                        overwrite: "all",
                        zIndex: 2,
                        autoAlpha: 1
                    },
                    aX = {
                        autoAlpha: 1,
                        force3D: "auto",
                        ease: a2
                    },
                    a0 = 1 == al ? "y" : "x";
                aC[a0] = "0px", aF[a0] = an, aI[a0] = az, aL[a0] = "0%", aO[a0] = aq, aR[a0] = an, aU[a0] = au, aX[a0] = aw, aj.append('<span style="background-color:rgba(0,0,0,0.6);width:100%;height:100%;position:absolute;top:0px;left:0px;display:block;z-index:2"></span>'), ay.add(punchgs.TweenLite.fromTo(av, aZ / 1000, aC, aF), 0), ay.add(punchgs.TweenLite.fromTo(at.find(".defaultimg"), aZ / 2000, aI, aL), aZ / 2000), ay.add(punchgs.TweenLite.fromTo(aj, aZ / 1000, aO, aR), 0), ay.add(punchgs.TweenLite.fromTo(aj.find(".slotslide div"), aZ / 1000, aU, aX), 0)
            }
            if (31 == f || 32 == f || 33 == f || 34 == f) {
                aZ = 6000, a2 = punchgs.Power3.easeInOut;
                var a3 = aZ / 1000;
                mas = a3 - a3 / 5, _nt = f, fy = 31 == _nt ? "+100%" : 32 == _nt ? "-100%" : "0%", fx = 33 == _nt ? "+100%" : 34 == _nt ? "-100%" : "0%", ty = 31 == _nt ? "-100%" : 32 == _nt ? "+100%" : "0%", tx = 33 == _nt ? "-100%" : 34 == _nt ? "+100%" : "0%", ay.add(punchgs.TweenLite.fromTo(av, a3 - 0.2 * a3, {
                    y: 0,
                    x: 0
                }, {
                    y: ty,
                    x: tx,
                    ease: a5
                }), 0.2 * a3), ay.add(punchgs.TweenLite.fromTo(at, a3, {
                    y: fy,
                    x: fx
                }, {
                    y: "0%",
                    x: "0%",
                    ease: a2
                }), 0), at.find(".slot").remove(), at.find(".defaultimg").clone().appendTo(at).addClass("slot"), a6(at, a3, _nt, "in", a2)
            }
            if (11 == f) {
                aT > 4 && (aT = 0);
                var ah = 0,
                    a9 = 2 == aT ? "#000000" : 3 == aT ? "#ffffff" : "transparent";
                switch (aT) {
                    case 0:
                        ay.add(punchgs.TweenLite.fromTo(at, aZ / 1000, {
                            autoAlpha: 0
                        }, {
                            autoAlpha: 1,
                            force3D: "auto",
                            ease: a2
                        }), 0);
                        break;
                    case 1:
                        ay.add(punchgs.TweenLite.fromTo(at, aZ / 1000, {
                            autoAlpha: 0
                        }, {
                            autoAlpha: 1,
                            force3D: "auto",
                            ease: a2
                        }), 0), ay.add(punchgs.TweenLite.fromTo(av, aZ / 1000, {
                            autoAlpha: 1
                        }, {
                            autoAlpha: 0,
                            force3D: "auto",
                            ease: a2
                        }), 0);
                        break;
                    case 2:
                    case 3:
                    case 4:
                        ay.add(punchgs.TweenLite.set(av.parent(), {
                            backgroundColor: a9,
                            force3D: "auto"
                        }), 0), ay.add(punchgs.TweenLite.set(at.parent(), {
                            backgroundColor: "transparent",
                            force3D: "auto"
                        }), 0), ay.add(punchgs.TweenLite.to(av, aZ / 2000, {
                            autoAlpha: 0,
                            force3D: "auto",
                            ease: a2
                        }), 0), ay.add(punchgs.TweenLite.fromTo(at, aZ / 2000, {
                            autoAlpha: 0
                        }, {
                            autoAlpha: 1,
                            force3D: "auto",
                            ease: a2
                        }), aZ / 2000)
                }
                ay.add(punchgs.TweenLite.set(at.find(".defaultimg"), {
                    autoAlpha: 1
                }), 0), ay.add(punchgs.TweenLite.set(av.find("defaultimg"), {
                    autoAlpha: 1
                }), 0)
            }
            if (26 == f) {
                var ah = 0;
                aZ = 0, ay.add(punchgs.TweenLite.fromTo(at, aZ / 1000, {
                    autoAlpha: 0
                }, {
                    autoAlpha: 1,
                    force3D: "auto",
                    ease: a2
                }), 0), ay.add(punchgs.TweenLite.to(av, aZ / 1000, {
                    autoAlpha: 0,
                    force3D: "auto",
                    ease: a2
                }), 0), ay.add(punchgs.TweenLite.set(at.find(".defaultimg"), {
                    autoAlpha: 1
                }), 0), ay.add(punchgs.TweenLite.set(av.find("defaultimg"), {
                    autoAlpha: 1
                }), 0)
            }
            if (12 == f || 13 == f || 14 == f || 15 == f) {
                aZ = aZ, aZ > aB.delay && (aZ = aB.delay), setTimeout(function() {
                    punchgs.TweenLite.set(av.find(".defaultimg"), {
                        autoAlpha: 0
                    })
                }, 100);
                var bc = aB.width,
                    be = aB.height,
                    bg = at.find(".slotslide, .defaultvid"),
                    d = 0,
                    e = 0,
                    ab = 1,
                    ae = 1,
                    ag = 1,
                    ai = aZ / 1000,
                    ak = ai;
                "fullwidth" != aB.sliderLayout && "fullscreen" != aB.sliderLayout || (bc = bg.width(), be = bg.height()), 12 == f ? d = bc : 15 == f ? d = 0 - bc : 13 == f ? e = be : 14 == f && (e = 0 - be), 1 == aT && (ab = 0), 2 == aT && (ab = 0), 3 == aT && (ai = aZ / 1300), 4 != aT && 5 != aT || (ae = 0.6), 6 == aT && (ae = 1.4), 5 != aT && 6 != aT || (ag = 1.4, ab = 0, bc = 0, be = 0, d = 0, e = 0), 6 == aT && (ag = 0.6);
                7 == aT && (bc = 0, be = 0);
                var ao = at.find(".slotslide"),
                    ar = av.find(".slotslide, .defaultvid");
                if (ay.add(punchgs.TweenLite.set(ap, {
                        zIndex: 15
                    }), 0), ay.add(punchgs.TweenLite.set(am, {
                        zIndex: 20
                    }), 0), 8 == aT ? (ay.add(punchgs.TweenLite.set(ap, {
                        zIndex: 20
                    }), 0), ay.add(punchgs.TweenLite.set(am, {
                        zIndex: 15
                    }), 0), ay.add(punchgs.TweenLite.set(ao, {
                        left: 0,
                        top: 0,
                        scale: 1,
                        opacity: 1,
                        rotation: 0,
                        ease: a2,
                        force3D: "auto"
                    }), 0)) : ay.add(punchgs.TweenLite.from(ao, ai, {
                        left: d,
                        top: e,
                        scale: ag,
                        opacity: ab,
                        rotation: aB.rotate,
                        ease: a2,
                        force3D: "auto"
                    }), 0), 4 != aT && 5 != aT || (bc = 0, be = 0), 1 != aT) {
                    switch (f) {
                        case 12:
                            ay.add(punchgs.TweenLite.to(ar, ak, {
                                left: 0 - bc + "px",
                                force3D: "auto",
                                scale: ae,
                                opacity: ab,
                                rotation: aB.rotate,
                                ease: a5
                            }), 0);
                            break;
                        case 15:
                            ay.add(punchgs.TweenLite.to(ar, ak, {
                                left: bc + "px",
                                force3D: "auto",
                                scale: ae,
                                opacity: ab,
                                rotation: aB.rotate,
                                ease: a5
                            }), 0);
                            break;
                        case 13:
                            ay.add(punchgs.TweenLite.to(ar, ak, {
                                top: 0 - be + "px",
                                force3D: "auto",
                                scale: ae,
                                opacity: ab,
                                rotation: aB.rotate,
                                ease: a5
                            }), 0);
                            break;
                        case 14:
                            ay.add(punchgs.TweenLite.to(ar, ak, {
                                top: be + "px",
                                force3D: "auto",
                                scale: ae,
                                opacity: ab,
                                rotation: aB.rotate,
                                ease: a5
                            }), 0)
                    }
                }
            }
            if (16 == f) {
                var C = new punchgs.TimelineLite;
                ay.add(punchgs.TweenLite.set(ap, {
                    position: "absolute",
                    "z-index": 20
                }), 0), ay.add(punchgs.TweenLite.set(am, {
                    position: "absolute",
                    "z-index": 15
                }), 0), ap.wrapInner('<div class="tp-half-one" style="position:relative; width:100%;height:100%"></div>'), ap.find(".tp-half-one").clone(!0).appendTo(ap).addClass("tp-half-two"), ap.find(".tp-half-two").removeClass("tp-half-one");
                var bc = aB.width,
                    be = aB.height;
                "on" == aB.autoHeight && (be = af.height()), ap.find(".tp-half-one .defaultimg").wrap('<div class="tp-papercut" style="width:' + bc + "px;height:" + be + 'px;"></div>'), ap.find(".tp-half-two .defaultimg").wrap('<div class="tp-papercut" style="width:' + bc + "px;height:" + be + 'px;"></div>'), ap.find(".tp-half-two .defaultimg").css({
                    position: "absolute",
                    top: "-50%"
                }), ap.find(".tp-half-two .tp-caption").wrapAll('<div style="position:absolute;top:-50%;left:0px;"></div>'), ay.add(punchgs.TweenLite.set(ap.find(".tp-half-two"), {
                    width: bc,
                    height: be,
                    overflow: "hidden",
                    zIndex: 15,
                    position: "absolute",
                    top: be / 2,
                    left: "0px",
                    transformPerspective: 600,
                    transformOrigin: "center bottom"
                }), 0), ay.add(punchgs.TweenLite.set(ap.find(".tp-half-one"), {
                    width: bc,
                    height: be / 2,
                    overflow: "visible",
                    zIndex: 10,
                    position: "absolute",
                    top: "0px",
                    left: "0px",
                    transformPerspective: 600,
                    transformOrigin: "center top"
                }), 0);
                var ax = (ap.find(".defaultimg"), Math.round(20 * Math.random() - 10)),
                    aA = Math.round(20 * Math.random() - 10),
                    aD = Math.round(20 * Math.random() - 10),
                    aG = 0.4 * Math.random() - 0.2,
                    aJ = 0.4 * Math.random() - 0.2,
                    aM = 1 * Math.random() + 1,
                    aP = 1 * Math.random() + 1,
                    aS = 0.3 * Math.random() + 0.3;
                ay.add(punchgs.TweenLite.set(ap.find(".tp-half-one"), {
                    overflow: "hidden"
                }), 0), ay.add(punchgs.TweenLite.fromTo(ap.find(".tp-half-one"), aZ / 800, {
                    width: bc,
                    height: be / 2,
                    position: "absolute",
                    top: "0px",
                    left: "0px",
                    force3D: "auto",
                    transformOrigin: "center top"
                }, {
                    scale: aM,
                    rotation: ax,
                    y: 0 - be - be / 4,
                    autoAlpha: 0,
                    ease: a2
                }), 0), ay.add(punchgs.TweenLite.fromTo(ap.find(".tp-half-two"), aZ / 800, {
                    width: bc,
                    height: be,
                    overflow: "hidden",
                    position: "absolute",
                    top: be / 2,
                    left: "0px",
                    force3D: "auto",
                    transformOrigin: "center bottom"
                }, {
                    scale: aP,
                    rotation: aA,
                    y: be + be / 4,
                    ease: a2,
                    autoAlpha: 0,
                    onComplete: function() {
                        punchgs.TweenLite.set(ap, {
                            position: "absolute",
                            "z-index": 15
                        }), punchgs.TweenLite.set(am, {
                            position: "absolute",
                            "z-index": 20
                        }), ap.find(".tp-half-one").length > 0 && (ap.find(".tp-half-one .defaultimg").unwrap(), ap.find(".tp-half-one .slotholder").unwrap()), ap.find(".tp-half-two").remove()
                    }
                }), 0), C.add(punchgs.TweenLite.set(at.find(".defaultimg"), {
                    autoAlpha: 1
                }), 0), null != ap.html() && ay.add(punchgs.TweenLite.fromTo(am, (aZ - 200) / 1000, {
                    scale: aS,
                    x: aB.width / 4 * aG,
                    y: be / 4 * aJ,
                    rotation: aD,
                    force3D: "auto",
                    transformOrigin: "center center",
                    ease: a5
                }, {
                    autoAlpha: 1,
                    scale: 1,
                    x: 0,
                    y: 0,
                    rotation: 0
                }), 0), ay.add(C, 0)
            }
            if (17 == f && at.find(".slotslide").each(function(c) {
                    var g = jQuery(this);
                    ay.add(punchgs.TweenLite.fromTo(g, aZ / 800, {
                        opacity: 0,
                        rotationY: 0,
                        scale: 0.9,
                        rotationX: -110,
                        force3D: "auto",
                        transformPerspective: 600,
                        transformOrigin: "center center"
                    }, {
                        opacity: 1,
                        top: 0,
                        left: 0,
                        scale: 1,
                        rotation: 0,
                        rotationX: 0,
                        force3D: "auto",
                        rotationY: 0,
                        ease: a2,
                        delay: 0.06 * c
                    }), 0)
                }), 18 == f && at.find(".slotslide").each(function(c) {
                    var g = jQuery(this);
                    ay.add(punchgs.TweenLite.fromTo(g, aZ / 500, {
                        autoAlpha: 0,
                        rotationY: 110,
                        scale: 0.9,
                        rotationX: 10,
                        force3D: "auto",
                        transformPerspective: 600,
                        transformOrigin: "center center"
                    }, {
                        autoAlpha: 1,
                        top: 0,
                        left: 0,
                        scale: 1,
                        rotation: 0,
                        rotationX: 0,
                        force3D: "auto",
                        rotationY: 0,
                        ease: a2,
                        delay: 0.06 * c
                    }), 0)
                }), 19 == f || 22 == f) {
                var C = new punchgs.TimelineLite;
                ay.add(punchgs.TweenLite.set(ap, {
                    zIndex: 20
                }), 0), ay.add(punchgs.TweenLite.set(am, {
                    zIndex: 20
                }), 0), setTimeout(function() {
                    av.find(".defaultimg").css({
                        opacity: 0
                    })
                }, 100);
                var aV = 90,
                    ab = 1,
                    aY = "center center ";
                1 == aK && (aV = -90), 19 == f ? (aY = aY + "-" + aB.height / 2, ab = 0) : aY += aB.height / 2, punchgs.TweenLite.set(af, {
                    transformStyle: "flat",
                    backfaceVisibility: "hidden",
                    transformPerspective: 600
                }), at.find(".slotslide").each(function(c) {
                    var g = jQuery(this);
                    C.add(punchgs.TweenLite.fromTo(g, aZ / 1000, {
                        transformStyle: "flat",
                        backfaceVisibility: "hidden",
                        left: 0,
                        rotationY: aB.rotate,
                        z: 10,
                        top: 0,
                        scale: 1,
                        force3D: "auto",
                        transformPerspective: 600,
                        transformOrigin: aY,
                        rotationX: aV
                    }, {
                        left: 0,
                        rotationY: 0,
                        top: 0,
                        z: 0,
                        scale: 1,
                        force3D: "auto",
                        rotationX: 0,
                        delay: 50 * c / 1000,
                        ease: a2
                    }), 0), C.add(punchgs.TweenLite.to(g, 0.1, {
                        autoAlpha: 1,
                        delay: 50 * c / 1000
                    }), 0), ay.add(C)
                }), av.find(".slotslide").each(function(g) {
                    var o = jQuery(this),
                        p = -90;
                    1 == aK && (p = 90), C.add(punchgs.TweenLite.fromTo(o, aZ / 1000, {
                        transformStyle: "flat",
                        backfaceVisibility: "hidden",
                        autoAlpha: 1,
                        rotationY: 0,
                        top: 0,
                        z: 0,
                        scale: 1,
                        force3D: "auto",
                        transformPerspective: 600,
                        transformOrigin: aY,
                        rotationX: 0
                    }, {
                        autoAlpha: 1,
                        rotationY: aB.rotate,
                        top: 0,
                        z: 10,
                        scale: 1,
                        rotationX: p,
                        delay: 50 * g / 1000,
                        force3D: "auto",
                        ease: a5
                    }), 0), ay.add(C)
                }), ay.add(punchgs.TweenLite.set(ap, {
                    zIndex: 18
                }), 0)
            }
            if (20 == f) {
                if (setTimeout(function() {
                        av.find(".defaultimg").css({
                            opacity: 0
                        })
                    }, 100), 1 == aK) {
                    var a1 = -aB.width,
                        aV = 80,
                        aY = "20% 70% -" + aB.height / 2
                } else {
                    var a1 = aB.width,
                        aV = -80,
                        aY = "80% 70% -" + aB.height / 2
                }
                at.find(".slotslide").each(function(g) {
                    var o = jQuery(this),
                        p = 50 * g / 1000;
                    ay.add(punchgs.TweenLite.fromTo(o, aZ / 1000, {
                        left: a1,
                        rotationX: 40,
                        z: -600,
                        opacity: ab,
                        top: 0,
                        scale: 1,
                        force3D: "auto",
                        transformPerspective: 600,
                        transformOrigin: aY,
                        transformStyle: "flat",
                        rotationY: aV
                    }, {
                        left: 0,
                        rotationX: 0,
                        opacity: 1,
                        top: 0,
                        z: 0,
                        scale: 1,
                        rotationY: 0,
                        delay: p,
                        ease: a2
                    }), 0)
                }), av.find(".slotslide").each(function(g) {
                    var o = jQuery(this),
                        p = 50 * g / 1000;
                    if (p = g > 0 ? p + aZ / 9000 : 0, 1 != aK) {
                        var q = -aB.width / 2,
                            r = 30,
                            s = "20% 70% -" + aB.height / 2
                    } else {
                        var q = aB.width / 2,
                            r = -30,
                            s = "80% 70% -" + aB.height / 2
                    }
                    a5 = punchgs.Power2.easeInOut, ay.add(punchgs.TweenLite.fromTo(o, aZ / 1000, {
                        opacity: 1,
                        rotationX: 0,
                        top: 0,
                        z: 0,
                        scale: 1,
                        left: 0,
                        force3D: "auto",
                        transformPerspective: 600,
                        transformOrigin: s,
                        transformStyle: "flat",
                        rotationY: 0
                    }, {
                        opacity: 1,
                        rotationX: 20,
                        top: 0,
                        z: -600,
                        left: q,
                        force3D: "auto",
                        rotationY: r,
                        delay: p,
                        ease: a5
                    }), 0)
                })
            }
            if (21 == f || 25 == f) {
                setTimeout(function() {
                    av.find(".defaultimg").css({
                        opacity: 0
                    })
                }, 100);
                var aV = 90,
                    a1 = -aB.width,
                    a4 = -aV;
                if (1 == aK) {
                    if (25 == f) {
                        var aY = "center top 0";
                        aV = aB.rotate
                    } else {
                        var aY = "left center 0";
                        a4 = aB.rotate
                    }
                } else {
                    if (a1 = aB.width, aV = -90, 25 == f) {
                        var aY = "center bottom 0";
                        a4 = -aV, aV = aB.rotate
                    } else {
                        var aY = "right center 0";
                        a4 = aB.rotate
                    }
                }
                at.find(".slotslide").each(function(g) {
                    var o = jQuery(this),
                        p = aZ / 1.5 / 3;
                    ay.add(punchgs.TweenLite.fromTo(o, 2 * p / 1000, {
                        left: 0,
                        transformStyle: "flat",
                        rotationX: a4,
                        z: 0,
                        autoAlpha: 0,
                        top: 0,
                        scale: 1,
                        force3D: "auto",
                        transformPerspective: 1200,
                        transformOrigin: aY,
                        rotationY: aV
                    }, {
                        left: 0,
                        rotationX: 0,
                        top: 0,
                        z: 0,
                        autoAlpha: 1,
                        scale: 1,
                        rotationY: 0,
                        force3D: "auto",
                        delay: p / 1000,
                        ease: a2
                    }), 0)
                }), 1 != aK ? (a1 = -aB.width, aV = 90, 25 == f ? (aY = "center top 0", a4 = -aV, aV = aB.rotate) : (aY = "left center 0", a4 = aB.rotate)) : (a1 = aB.width, aV = -90, 25 == f ? (aY = "center bottom 0", a4 = -aV, aV = aB.rotate) : (aY = "right center 0", a4 = aB.rotate)), av.find(".slotslide").each(function(c) {
                    var g = jQuery(this);
                    ay.add(punchgs.TweenLite.fromTo(g, aZ / 1000, {
                        left: 0,
                        transformStyle: "flat",
                        rotationX: 0,
                        z: 0,
                        autoAlpha: 1,
                        top: 0,
                        scale: 1,
                        force3D: "auto",
                        transformPerspective: 1200,
                        transformOrigin: aY,
                        rotationY: 0
                    }, {
                        left: 0,
                        rotationX: a4,
                        top: 0,
                        z: 0,
                        autoAlpha: 1,
                        force3D: "auto",
                        scale: 1,
                        rotationY: aV,
                        ease: a5
                    }), 0)
                })
            }
            if (23 == f || 24 == f) {
                setTimeout(function() {
                    av.find(".defaultimg").css({
                        opacity: 0
                    })
                }, 100);
                var aV = -90,
                    ab = 1,
                    a7 = 0;
                if (1 == aK && (aV = 90), 23 == f) {
                    var aY = "center center -" + aB.width / 2;
                    ab = 0
                } else {
                    var aY = "center center " + aB.width / 2
                }
                punchgs.TweenLite.set(af, {
                    transformStyle: "preserve-3d",
                    backfaceVisibility: "hidden",
                    perspective: 2500
                }), at.find(".slotslide").each(function(c) {
                    var g = jQuery(this);
                    ay.add(punchgs.TweenLite.fromTo(g, aZ / 1000, {
                        left: a7,
                        rotationX: aB.rotate,
                        force3D: "auto",
                        opacity: ab,
                        top: 0,
                        scale: 1,
                        transformPerspective: 1200,
                        transformOrigin: aY,
                        rotationY: aV
                    }, {
                        left: 0,
                        rotationX: 0,
                        autoAlpha: 1,
                        top: 0,
                        z: 0,
                        scale: 1,
                        rotationY: 0,
                        delay: 50 * c / 500,
                        ease: a2
                    }), 0)
                }), aV = 90, 1 == aK && (aV = -90), av.find(".slotslide").each(function(a) {
                    var g = jQuery(this);
                    ay.add(punchgs.TweenLite.fromTo(g, aZ / 1000, {
                        left: 0,
                        rotationX: 0,
                        top: 0,
                        z: 0,
                        scale: 1,
                        force3D: "auto",
                        transformStyle: "flat",
                        transformPerspective: 1200,
                        transformOrigin: aY,
                        rotationY: 0
                    }, {
                        left: a7,
                        rotationX: aB.rotate,
                        top: 0,
                        scale: 1,
                        rotationY: aV,
                        delay: 50 * a / 500,
                        ease: a5
                    }), 0), 23 == f && ay.add(punchgs.TweenLite.fromTo(g, aZ / 2000, {
                        autoAlpha: 1
                    }, {
                        autoAlpha: 0,
                        delay: 50 * a / 500 + aZ / 3000,
                        ease: a5
                    }), 0)
                })
            }
            return ay
        }
}(jQuery);